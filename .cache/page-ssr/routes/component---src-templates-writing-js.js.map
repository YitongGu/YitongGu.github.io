{"version":3,"file":"component---src-templates-writing-js.js","mappings":";;;;;;;;;;;;;;;;;;;;AAOA,KAAM,CAAAM,sBAAsB,CAAGF,yDAAM,CAACG,IAAI,CAAAC,UAAA,EAAAC,WAAA,mCAAAC,WAAA,qDAGzC,CAED,KAAM,CAAAC,mBAAmB,CAAGP,yDAAM,CAACQ,MAAM,CAAAJ,UAAA,EAAAC,WAAA,gCAAAC,WAAA,2DAGxC,CAED,KAAM,CAAAG,kBAAkB,CAAGT,yDAAM,CAACU,EAAE,CAAAN,UAAA,EAAAC,WAAA,+BAAAC,WAAA,iIAMnC,CAED,KAAM,CAAAK,iBAAiB,CAAGX,yDAAM,CAACY,GAAG,CAAAR,UAAA,EAAAC,WAAA,8BAAAC,WAAA,yFAInC,CAED,KAAM,CAAAO,iBAAiB,CAAGb,yDAAM,CAACc,IAAI,CAAAV,UAAA,EAAAC,WAAA,8BAAAC,WAAA,8GAKpC,CAED,KAAM,CAAAS,wBAAwB,CAAGf,yDAAM,CAACgB,CAAC,CAAAZ,UAAA,EAAAC,WAAA,qCAAAC,WAAA,uJAQxC,CAED,KAAM,CAAAW,oBAAoB,CAAGjB,yDAAM,CAACY,GAAG,CAAAR,UAAA,EAAAC,WAAA,iCAAAC,WAAA,mxBA0CjC,CAAC,CAAEY,KAAM,CAAC,GAAKA,KAAK,CAACC,MAAM,CAACC,UAAU,CAe3C,CAED,KAAM,CAAAC,gBAAgB,CAAGrB,yDAAM,CAACY,GAAG,CAAAR,UAAA,EAAAC,WAAA,6BAAAC,WAAA,6PAI7B,CAAC,CAAEY,KAAM,CAAC,GAAKA,KAAK,CAACC,MAAM,CAACG,UAAU,CAiB3C,CAED,KAAM,CAAAC,eAAe,CAAGA,CAAC,CAAEC,IAAI,CAAEC,QAAS,CAAC,GAAK,CAC9C,GAAI,CAACD,IAAI,CAACE,cAAc,CAAE,CACxB,mBAAO9B,0DAAA,YAAK,oBAAuB,CAAC,CACtC,CACA,KAAM,CAAEgC,WAAW,CAAEC,IAAK,CAAC,CAAGL,IAAI,CAACE,cAAc,CACjD,KAAM,CAAEI,KAAK,CAAEC,IAAI,CAAEC,IAAI,CAAEC,WAAY,CAAC,CAAGL,WAAW,CAEtD,mBACEhC,0DAAA,CAACK,yDAAM,EAACwB,QAAQ,CAAEA,QAAS,eACzB7B,0DAAA,CAACG,gDAAM,EAAC+B,KAAK,CAAEA,KAAM,CAAE,CAAC,cAExBlC,0DAAA,CAACM,sBAAsB,mBACrBN,0DAAA,CAACyB,gBAAgB,mBACfzB,0DAAA,CAACC,wCAAI,EAACqC,EAAE,CAAC,UAAU,CAACC,SAAS,CAAC,YAAY,eACxCvC,0DAAA,SAAMuC,SAAS,CAAC,OAAO,EAAC,QAAY,CAAC,kBAEjC,CACU,CAAC,cAEnBvC,0DAAA,CAACW,mBAAmB,mBAClBX,0DAAA,CAACa,kBAAkB,MAAEqB,KAA0B,CAAC,cAChDlC,0DAAA,CAACe,iBAAiB,mBAChBf,0DAAA,aACG,GAAI,CAAAwC,IAAI,CAACL,IAAI,CAAC,CAACM,kBAAkB,CAAC,OAAO,CAAE,CAC1CC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,MAAM,CACbC,GAAG,CAAE,SACP,CAAC,CACG,CAAC,cACP5C,0DAAA,CAACiB,iBAAiB,MAAEmB,IAAwB,CAC3B,CAAC,CACnBC,WAAW,eACVrC,0DAAA,CAACmB,wBAAwB,MAAEkB,WAAsC,CAEhD,CAAC,cAEtBrC,0DAAA,CAACqB,oBAAoB,EAACwB,uBAAuB,CAAE,CAAEC,MAAM,CAAEb,IAAK,CAAE,CAAE,CAC5C,CAClB,CAAC,CAEb,CAAC,CAED,iEAAeN,eAAe,EAE9BA,eAAe,CAACoB,SAAS,CAAG,CAC1BnB,IAAI,CAAE1B,0DAAgB,CACtB2B,QAAQ,CAAE3B,0DACZ,CAAC,CAEM,KAAM,CAAA+C,SAAS,YAarB,C","sources":["webpack://AvlasRefl's personal Website/./src/templates/writing.js"],"sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { Layout } from '@components';\n\nconst StyledWritingContainer = styled.main`\n  max-width: 1100px;\n  margin: 0 auto;\n`;\n\nconst StyledWritingHeader = styled.header`\n  margin-bottom: 60px;\n  text-align: center;\n`;\n\nconst StyledWritingTitle = styled.h1`\n  color: var(--lightpurple);\n  font-size: clamp(32px, 6vw, 48px);\n  margin-bottom: 20px;\n  font-weight: 600;\n  line-height: 1.1;\n`;\n\nconst StyledWritingMeta = styled.div`\n  color: var(--light-slate);\n  font-size: var(--fz-lg);\n  margin-bottom: 30px;\n`;\n\nconst StyledWritingType = styled.span`\n  color: var(--green);\n  font-family: var(--font-mono);\n  font-size: var(--fz-sm);\n  margin-left: 15px;\n`;\n\nconst StyledWritingDescription = styled.p`\n  color: var(--light-slate);\n  font-size: var(--fz-lg);\n  font-style: italic;\n  line-height: 1.6;\n  max-width: 100%;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst StyledWritingContent = styled.div`\n  margin-bottom: 100px;\n  max-width: 100%;\n  \n  h1, h2, h3, h4, h5, h6 {\n    margin: 2.5em 0 1em;\n    color: var(--lightest-slate);\n    font-weight: 600;\n    line-height: 1.2;\n  }\n\n  h1 {\n    font-size: clamp(24px, 4vw, 32px);\n  }\n\n  h2 {\n    font-size: clamp(20px, 3vw, 28px);\n  }\n\n  h3 {\n    font-size: clamp(18px, 2.5vw, 24px);\n  }\n\n  p {\n    margin: 1.5em 0;\n    line-height: 1.8;\n    color: var(--light-slate);\n    font-size: var(--fz-lg);\n    text-align: justify;\n  }\n\n  blockquote {\n    border-left: 4px solid var(--green);\n    margin: 2em 0;\n    padding: 1em 0 1em 2em;\n    font-style: italic;\n    color: var(--light-slate);\n    background: rgba(96, 250, 248, 0.05);\n    border-radius: 0 var(--border-radius) var(--border-radius) 0;\n  }\n\n  a {\n    ${({ theme }) => theme.mixins.inlineLink};\n  }\n\n  code {\n    background-color: var(--lightest-navy);\n    color: var(--lightest-slate);\n    border-radius: var(--border-radius);\n    font-size: var(--fz-sm);\n    padding: 0.2em 0.4em;\n  }\n\n  pre code {\n    background-color: transparent;\n    padding: 0;\n  }\n`;\n\nconst StyledBackButton = styled.div`\n  margin-bottom: 40px;\n  \n  .breadcrumb {\n    ${({ theme }) => theme.mixins.flexCenter};\n    font-family: var(--font-mono);\n    font-size: var(--fz-sm);\n    color: var(--light-slate);\n    \n    .arrow {\n      margin-right: 10px;\n      transition: var(--transition);\n    }\n    \n    &:hover {\n      color: var(--green);\n      .arrow {\n        transform: translateX(-5px);\n      }\n    }\n  }\n`;\n\nconst WritingTemplate = ({ data, location }) => {\n  if (!data.markdownRemark) {\n    return <div>Writing not found.</div>;\n  }\n  const { frontmatter, html } = data.markdownRemark;\n  const { title, date, type, description } = frontmatter;\n\n  return (\n    <Layout location={location}>\n      <Helmet title={title} />\n\n      <StyledWritingContainer>\n        <StyledBackButton>\n          <Link to=\"/gallery\" className=\"breadcrumb\">\n            <span className=\"arrow\">&larr;</span>\n            Back to Gallery\n          </Link>\n        </StyledBackButton>\n\n        <StyledWritingHeader>\n          <StyledWritingTitle>{title}</StyledWritingTitle>\n          <StyledWritingMeta>\n            <time>\n              {new Date(date).toLocaleDateString('en-US', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n              })}\n            </time>\n            <StyledWritingType>{type}</StyledWritingType>\n          </StyledWritingMeta>\n          {description && (\n            <StyledWritingDescription>{description}</StyledWritingDescription>\n          )}\n        </StyledWritingHeader>\n\n        <StyledWritingContent dangerouslySetInnerHTML={{ __html: html }} />\n      </StyledWritingContainer>\n    </Layout>\n  );\n};\n\nexport default WritingTemplate;\n\nWritingTemplate.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n};\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        description\n        date\n        type\n        slug\n      }\n    }\n  }\n`; "],"names":["React","Link","PropTypes","Helmet","styled","Layout","StyledWritingContainer","main","withConfig","displayName","componentId","StyledWritingHeader","header","StyledWritingTitle","h1","StyledWritingMeta","div","StyledWritingType","span","StyledWritingDescription","p","StyledWritingContent","theme","mixins","inlineLink","StyledBackButton","flexCenter","WritingTemplate","data","location","markdownRemark","createElement","frontmatter","html","title","date","type","description","to","className","Date","toLocaleDateString","year","month","day","dangerouslySetInnerHTML","__html","propTypes","object","pageQuery"],"sourceRoot":""}